<?js
  var self = this;
  var isGlobalPage;

  docs.forEach(function(doc, docIndex) {
    var docletName = doc.name
    var docletLongname = doc.longname
    var isStaticDoclet = doc.static

    var isClassOrConstructor = doc.kind === 'class' && !isStaticDoclet;

    // we only need to check this once
    if (typeof isGlobalPage === 'undefined') {
      isGlobalPage = (doc.kind === 'globalobj');
    }

    if (doc.kind === 'mainpage' || doc.kind === 'package') {
?>
      <?js= self.partial('mainpage.tmpl', doc) ?>
<?js
    } else if (doc.kind === 'source') {
      // nothing
    } else {
      if (!docletLongname || doc.kind !== 'module') {
?>
        <h2> <!-- start H2 -->
<?js
          var ancestors = doc.ancestors
          var numberOfAncestors = ancestors ? ancestors.length : 0

          if (numberOfAncestors > 0) {
?>
            <span class="ancestors">
              <?js= ancestors.join('') ?>
            </span>
<?js
          }
?>
          <span>
            <?js= doc.parsedName ?>
          </span>
<?js
          var variation = doc.variaton
          if (variation) {
?>
            <sup class="variation">
              <?js= variation ?>
            </sup>
<?js
          }
?>
        </h2> <!-- end H2 -->

<?js
        if(isStaticDoclet) {
?>
          <?js= self.partial('modifiers.tmpl', doc) ?>
<?js
        }

        var docletClassDescription = doc.classdesc

        var _classDescription = typeof docletClassDescription === "string"
          ? docletClassDescription.replace(/(\{@link [^}]+)&quot;([^\}]+)&quot;([^\}]*\})/g, "$1\"$2\"$3")
          : docletClassDescription
?>
        <?js= _classDescription ?>
<?js
      } // end of inital if else {}
?>
      <?js= self.partial('amd.tmpl', doc) ?>
<?js
      if (!isClassOrConstructor) {

        var docletDescription = doc.description
        if (docletDescription) {
?>
          <div class="description">
            <?js= doc.description ?>
          </div>
<?js
        }
?>
        <?js= self.partial('details.tmpl', doc) ?>
<?js
      } // not isClassOrConstructor

      var docletSeeLinks = doc.see
      var numberOfSeeLinks = docletSeeLinks ? docletSeeLinks.length : 0

      if (numberOfSeeLinks > 0) {
?>
        <p>
          <strong>See also:&nbsp;</strong>
<?js
          docletSeeLinks.forEach(function(seeLink, index) {
?>
            <?js= self.linkto(seeLink) ?>
<?js
            if(index < docletSeeLinks - 1) {
?>
              <?js= ", " ?>
<?js
            }
          })
?>
        </p>
<?js
      }

      var docletAugments = doc.augments
      var numberOfAugments = docletAugments ? docletAugments.length : 0

      if(numberOfAugments > 0) {
?>
        <p class="h3">Extends</p>
        <?js= self.partial('augments.tmpl', doc) ?>
<?js
      }

      if ( isClassOrConstructor ) {

        var docletImplements = doc.implements
        var numberOfImplements = docletImplements ? docletImplements.length : 0

        if (numberOfImplements > 0) {
?>
          <p class="h3">Implements</p>
          <ul>
<?js
            docletImplements.forEach(function(impl) {
?>
              <li>
                <?js= self.linkto(impl, self.htmlsafe(impl)) ?>
              </li>
<?js
            });
?>
          </ul>
<?js
        }

        var docletMixins = doc.mixes
        var numberOfMixins = docletMixins ? docletMixins.length : 0

        if (numberOfMixins > 0) {
?>
          <p class="h3">Mixes In</p>
          <ul>
<?js
            docletMixins.forEach(function(mix) {
?>
              <li>
                <?js= self.linkto(mix, mix) ?>
              </li>
<?js
            });
?>
          </ul>
<?js
        }
?>

        <h3>Constructor</h3>
        <?js= self.partial('methods-summary.tmpl', [doc]) ?>
<?js
      } else { // end isClassOrConstructor

        var docletExamples = doc.examples
        var numberOfExamples = docletExamples ? docletExamples.length : 0

        if (numberOfExamples > 0) {
          var examplesHeader = numberOfExamples > 1 ? "Examples" : "Example"
?>
          <h3>
            <?js= examplesHeader ?>
          </h3>

          <?js= self.partial('examples.tmpl', docletExamples) ?>
<?js
        }
      } // end not isClassOrConstructor

      var docletRequires = doc.requires
      var numberOfRequires = docletRequires ? docletRequires.length : 0

      if (docletRequires > 0) {
?>
        <h3 class="subsection-title">Requires</h3>
        <ul>
<?js
          docletRequires.forEach(function(_required) {
?>
            <li>
              <?js= self.linkto(_required, _required) ?>
            </li>
<?js
          });
?>
        </ul>
<?js
      }

      // Namespace Summary Start
      var namespaces = self.find({kind: 'namespace', memberof: docletLongname});
      var numberOfNamespaces = namespaces ? namespaces.length : 0

      if (!isGlobalPage && numberOfNamespaces > 0) {
?>
        <h3>Child Namespaces</h3>
        <?js= self.partial('summary.tmpl', namespaces) ?>
<?js
      }


      var classes = self.find({kind: 'class', memberof: docletLongname});
      var numberOfClasses = classes ? classes.length : 0

      if (!isGlobalPage && numberOfClasses > 0) {
?>
        <h3>Classes</h3>
        <?js= self.partial('summary.tmpl', classes) ?>
<?js
      }

      var staticEvents = self.find({kind: 'event', memberof: docletLongname, scope: "static"});
      var numberOfStaticEvents = staticEvents ? staticEvents.length : 0

      if (!isGlobalPage && numberOfStaticEvents > 0) {
?>
        <h3>Events</h3>
        <?js= self.partial('summary.tmpl', staticEvents) ?>
<?js
      }

      var interfaces = self.find({kind: 'interface', memberof: docletLongname});
      var numberOfInterfaces = interfaces ? interfaces.length : 0

      if (!isGlobalPage && numberOfInterfaces > 0) {
?>
        <h3>Interfaces</h3>
        <?js= self.partial('summary.tmpl', interfaces) ?>
<?js
      }

      var mixins = self.find({kind: 'mixin', memberof: docletLongname});
      var numberOfMixins = mixins ? mixins.length : 0

      if (!isGlobalPage && numberOfMixins > 0) {
?>
        <h3>Mixins</h3>
        <dl>
<?js
          mixins.forEach(function(mix) { ?>
            <dt>
              <?js= self.linkto(mix.longname, mix.name) ?>
            </dt>
<?js
          });
?>
        </dl>
<?js
      } // Namespace Summary End

      // Class Summary Start

      // Members composition
      var members = [].concat(self.find({kind: 'member', memberof: isGlobalPage ? {isUndefined: true} : docletLongname }))
      var numberOfMembers = members ? members.length : 0

      if (numberOfMembers > 0) {
?>
        <h3>Members</h3>
          <?js= self.partial('members-summary.tmpl', members) ?>
<?js
      }

      // Methods composition
      var methods = self.find({kind: 'function', memberof: isGlobalPage ? {isUndefined: true} : docletLongname});
      var numberOfMethods = methods ? methods.length : 0

      if (numberOfMethods > 0) {
?>
        <h3>Methods</h3>
        <?js= self.partial('methods-summary.tmpl', methods) ?>
<?js
      }

      var instanceEvents = self.find({kind: 'event', memberof: docletLongname, scope: "instance"});
      var numberOfInstanceEvents = instanceEvents ? instanceEvents.length : 0

      if (!isGlobalPage && numberOfInstanceEvents > 0) {
?>
        <h3>Events</h3>
        <?js= self.partial('events-summary.tmpl', instanceEvents) ?>
<?js
      } // Class Summary End

      // Details Start

      if (isClassOrConstructor) {
?>
        <p class="h3">Constructor Details</p>
        <?js= self.partial('method-details.tmpl', doc) ?>
<?js
      }

      if (numberOfMembers > 0) {
?>
        <p class="h3">Members Details</p>
<?js
        members.forEach(function(member) {
?>
          <?js= self.partial('member-details.tmpl', member) ?>
<?js
        });
      }

      if (numberOfMethods > 0) {
?>
        <p class="h3">Methods Details</p>
<?js
        methods.forEach(function(method) {
?>
          <?js= self.partial('method-details.tmpl', method) ?>
<?js
        });
      }

      var events = self.find({kind: 'event', memberof: docletLongname});
      var numberOfEvents = events ? events.length : 0

      if (numberOfEvents > 0) {
?>
        <p class="h3">Events Details</p>
<?js
        events.forEach(function(event) {
?>
          <?js= self.partial('method-details.tmpl', event) ?>
<?js
        });
      }

      var typedefs = self.find({kind: 'typedef', memberof: isGlobalPage ? {isUndefined: true} : docletLongname});
      var numberOfTypedefs = typedefs ? typedefs.length : 0

      if (numberOfTypedefs > 0) {
?>
        <h3>Type Definitions</h3>
<?js
        typedefs.forEach(function(definition) {
          if (definition.signature) {
?>
            <?js= self.partial('method-details.tmpl', definition) ?>
<?js
          } else {
?>
            <?js= self.partial('member-details.tmpl', definition) ?>
<?js
          }
        });
      }

      // Details End

    }

  });
?>
